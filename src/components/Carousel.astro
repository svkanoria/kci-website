---
import dayjs from "dayjs";
import CldImage from "./CldImage.astro";

export interface Props {
  items: (
    | { image: { src: string; alt: string } }
    | { news: { headline: string; body: string; timestamp: Date } }
  )[];
  density?: "regular" | "dense";
}

const { items, density = "regular" } = Astro.props;
---

<!-- my-carousel used to avoid conflict with daisyUI carousel -->
<section
  class="splide my-carousel mb-6"
  aria-label="Image gallery"
  data-density={density}
>
  <div class="splide__track">
    <ul class="splide__list">
      {
        items.map((item) => (
          <li class="splide__slide">
            {"image" in item ? (
              <div class="relative h-full">
                <CldImage
                  src={item.image.src}
                  width="100%"
                  height="100%"
                  alt={item.image.alt}
                  class="w-full h-full object-cover"
                />
                <div class="absolute left-1 bottom-1 p-1 bg-base-100 bg-opacity-90">
                  {item.image.alt}
                </div>
              </div>
            ) : "news" in item ? (
              <div class="py-4 h-full">
                <div class="card sm:card-compact rounded-none bg-base-100 shadow-lg h-full">
                  <div class="card-body text-stone-600">
                    <span class="text-stone-500">
                      {dayjs(item.news.timestamp).format("MMMM YYYY")}
                    </span>
                    <h2 class="card-title">{item.news.headline}</h2>
                    <p class="line-clamp-3">{item.news.body}</p>
                    <div class="card-actions justify-end">
                      <button class="btn btn-ghost">Read More</button>
                    </div>
                  </div>
                </div>
              </div>
            ) : (
              <div />
            )}
          </li>
        ))
      }
    </ul>
  </div>
</section>

<!-- Note prepending of 'button.'. This is to increase specificity. 
  Without this, when built, these styles are not applied because they are 
  overidden by something more specific. When in dev mode, this overriding 
  does not happen for some reason. -->
<style is:global>
  button.carousel__arrow {
    @apply w-12 h-12 bg-base-300 shadow-lg;
  }

  button.carousel__arrow.carousel__arrow--prev {
    @apply max-sm:left-[-12px];
  }

  button.carousel__arrow.carousel__arrow--next {
    @apply max-sm:right-[-12px];
  }

  button.carousel__pagination__page {
    @apply bottom-[-32px] w-2 h-2 bg-stone-300;
  }

  button.carousel__pagination__page.is-active {
    @apply bg-stone-500;
  }
</style>

<script>
  import Splide from "@splidejs/splide";
  import "@splidejs/splide/css";

  document.addEventListener("DOMContentLoaded", function () {
    const elements = document.getElementsByClassName("my-carousel");
    for (let element_ of elements) {
      const element = element_ as HTMLElement;
      new Splide(element, {
        type: "loop",
        perPage: element.dataset.density === "dense" ? 2 : 1,
        padding: "96px",
        gap: "16px",
        breakpoints: {
          640: {
            perPage: 1,
            padding: "0",
          },
        },
        classes: {
          // Add classes for arrows.
          arrows: "splide__arrows carousel__arrows",
          arrow: "splide__arrow carousel__arrow",
          prev: "splide__arrow--prev carousel__arrow--prev",
          next: "splide__arrow--next carousel__arrow--next",
          // Add classes for pagination.
          pagination: "splide__pagination carousel__pagination", // container
          page: "splide__pagination__page carousel__pagination__page", // each button
        },
      }).mount();
    }
  });
</script>
