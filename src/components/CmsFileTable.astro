---
import { useStoryblokApi } from "@storyblok/astro";
import { nullifyIfBlank, readableFileName } from "../utils";

export interface Props {
  story: string;
}

const { story } = Astro.props;

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get(`cdn/stories/${story}`, {
  version: import.meta.env.DEV ? "draft" : "published",
});

const files = data.story.content.files?.map((file) => ({
  name: file.name,
  url: file.asset.filename,
}));
---

<div class="overflow-x-auto">
  <table class="table table-compact table-fixed w-full">
    <thead>
      <tr>
        <th>Name</th>
        <th class="w-32 text-center">File</th>
      </tr>
    </thead>
    <tbody>
      {
        files?.map((file) => (
          <tr>
            <td
              class="text-stone-500 overflow-hidden text-ellipsis"
              title={file.name}
            >
              {nullifyIfBlank(file.name) ?? readableFileName(file.url)}
            </td>
            <td class="w-32 text-right">
              <a href={file.url} target="_blank" class="btn btn-xs btn-outline">
                Download
              </a>
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
</div>
